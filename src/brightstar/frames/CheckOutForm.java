/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package brightstar.frames;

import brightstar.connection.DBConnection;
import brightstar.generate.SendSparepartSaleInvoiceEmail;
import brightstar.generate.GenerateSparepartSaleInvoicePDF;
import brightstar.model.SparepartBuyer;
import brightstar.model.SparepartStock;
import brightstar.panels.CustomersPanel;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pasan
 */
public class CheckOutForm extends javax.swing.JFrame {

    /**
     * Creates new form CheckOutForm
     */
    public CheckOutForm() {
        initComponents();
    }

    public CheckOutForm(String invoiceID, String cnic, String idate, String payment, String total) {
        initComponents();

        SparepartBuyer newBuyer = getSparepartBuyerByNIC(cnic);

        invoiceNo.setText(invoiceID);
        nic.setText(newBuyer.getNIC().toString());
        customerName.setText(newBuyer.getName());
        address.setText(newBuyer.getAddress());
        phone.setText(newBuyer.getPhone());
        paymentMethod.setText(payment);
        date.setText(idate.toString());
        totalPrice.setText(total);

        if (payment.equals("Cheque")) {

            errorMessage.setForeground(new Color(0, 153, 0));
            errorMessage.setText("Enter bank details!");
        }

    }

    public SparepartBuyer getSparepartBuyerByNIC(String nic) {

        SparepartBuyer buyer = new SparepartBuyer();

        String viewAllBuyersQuery = "SELECT * FROM sparepart_buyer WHERE nic = ?";

        try {

            PreparedStatement ps = DBConnection.getDBconnection().prepareStatement(viewAllBuyersQuery);

            ps.setString(1, nic);

            ResultSet resultSet = ps.executeQuery();

            while (resultSet.next()) {
                SparepartBuyer newBuyer = new SparepartBuyer();
                newBuyer.setNIC(resultSet.getString(2));
                newBuyer.setName(resultSet.getString(3));
                newBuyer.setPhone(resultSet.getString(4));
                newBuyer.setAddress(resultSet.getString(5));
                newBuyer.setCompany(resultSet.getString(6));
                newBuyer.setEmail(resultSet.getString(7));
                buyer = newBuyer;
            }

            ps.close();
            resultSet.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomersPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex,
                    "Alert!", JOptionPane.PLAIN_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(CustomersPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex,
                    "Alert", JOptionPane.PLAIN_MESSAGE);

        }

        return buyer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        print_btn = new javax.swing.JButton();
        customerName = new javax.swing.JLabel();
        phone = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        nic = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoice_table = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        invoiceNo = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        totalPrice = new javax.swing.JLabel();
        JchequeNoField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        errorMessage = new javax.swing.JLabel();
        cancel_btn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        bank_combo = new javax.swing.JComboBox<>();
        paymentMethod = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sales Invoice");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(1200, 700));
        jPanel3.setMinimumSize(new java.awt.Dimension(1200, 700));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Date :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("NIC Number :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Customer Name :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Phone Number :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Address :");

        print_btn.setBackground(new java.awt.Color(255, 255, 255));
        print_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        print_btn.setText("Print");
        print_btn.setToolTipText("");
        print_btn.setIconTextGap(10);
        print_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_btnActionPerformed(evt);
            }
        });

        customerName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        phone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        nic.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        date.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Invoice No :");

        invoice_table.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        invoice_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Model", "Part Name", "Part No.", "Quantity", "Unit Price", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoice_table.setRowHeight(20);
        jScrollPane1.setViewportView(invoice_table);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Bank :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Cheque No :");

        invoiceNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("TOTAL");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("Rs.");

        totalPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        totalPrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Payment : ");

        errorMessage.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        cancel_btn.setBackground(new java.awt.Color(255, 255, 255));
        cancel_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cancel_btn.setText("Cancel");
        cancel_btn.setToolTipText("");
        cancel_btn.setActionCommand("");
        cancel_btn.setIconTextGap(10);
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/brightstar/images/brightstar_logo_black.png"))); // NOI18N

        bank_combo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        bank_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Bank", "Commercial Bank", "Sampath Bank", "BOC" }));

        paymentMethod.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nic, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(errorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(252, 252, 252)
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)
                                .addComponent(totalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(65, 65, 65)
                                .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(151, 151, 151)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel10))
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JchequeNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bank_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(262, 262, 262))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(print_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11)
                            .addComponent(paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nic, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(bank_combo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JchequeNoField, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(2, 2, 2)))
                        .addGap(18, 36, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(errorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<String> getSaleNos() {

        ArrayList<String> arrayList = new ArrayList<String>();

        String findIDQuery = "SELECT saleNo FROM sparepart_sale";

        PreparedStatement ps;
        try {
            ps = DBConnection.getDBconnection().prepareStatement(findIDQuery);

            ResultSet resultSet = ps.executeQuery();

            while (resultSet.next()) {
                arrayList.add(resultSet.getString(1));
            }

            ps.close();
            resultSet.close();

        } catch (ClassNotFoundException | SQLException e) {

            e.printStackTrace();
        }

        return arrayList;
    }

    public static String generateSaleNo(ArrayList<String> arrayList) {

        String id;
        int next = arrayList.size();
        next++;
        id = "S" + next;
        if (arrayList.contains(id)) {
            next++;
            id = "S" + next;
        }

        return id;
    }

    public void addSaleInvoice() {

        String invoiceID = invoiceNo.getText();
        String buyerName = customerName.getText();
        String cnic = nic.getText();
        String idate = date.getText();
        String payment = paymentMethod.getText();
        String status = "Paid";
        String bankName = bank_combo.getSelectedItem().toString();
        String chequeNo = JchequeNoField.getText();
        double grandTotal = Double.parseDouble(totalPrice.getText());

        if (paymentMethod.getText().equals("Cheque")) {

            status = "Pending";
        }

        if (paymentMethod.getText().equals("Cash")) {

            bankName = "-";
            chequeNo = "-";
        }

        try {

            String addInvoiceQuery = "INSERT INTO sparepart_sale_invoice "
                    + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)";

            PreparedStatement ps = DBConnection.getDBconnection().prepareStatement(addInvoiceQuery);

            ps.setString(1, invoiceID);
            ps.setString(2, buyerName);
            ps.setString(3, cnic);
            ps.setString(4, idate);
            ps.setString(5, payment);
            ps.setString(6, status);
            ps.setString(7, bankName);
            ps.setString(8, chequeNo);
            ps.setDouble(9, grandTotal);

            ps.executeUpdate();

            ps.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckOutForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckOutForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public ArrayList<SparepartStock> getItemsFromInvoice() {

        ArrayList<SparepartStock> itemList = new ArrayList<>();
        DefaultTableModel invoiceModel = (DefaultTableModel) invoice_table.getModel();

        for (int i = 0; i < invoiceModel.getRowCount(); i++) {
            SparepartStock item = new SparepartStock();
            item.setBrand((String) invoiceModel.getValueAt(i, 0));
            item.setModel((String) invoiceModel.getValueAt(i, 1));
            item.setPartname((String) invoiceModel.getValueAt(i, 2));
            item.setPartNumber((String) invoiceModel.getValueAt(i, 3));
            item.setQuantity(Integer.parseInt((String) invoiceModel.getValueAt(i, 4)));
            item.setUnitPrice(Double.parseDouble((String) invoiceModel.getValueAt(i, 5)));
            item.setTotal(Double.parseDouble((String) invoiceModel.getValueAt(i, 6)));

            itemList.add(item);
        }

        return itemList;
    }

    public void addSale() {

        String invoiceID = invoiceNo.getText();
        String idate = date.getText();

        ArrayList<SparepartStock> itemList = new ArrayList<>();
        itemList = getItemsFromInvoice();

        try {

            for (SparepartStock getItem : itemList) {

                String addSaleQuery = "INSERT INTO sparepart_sale "
                        + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

                PreparedStatement ps = DBConnection.getDBconnection().prepareStatement(addSaleQuery);

                ps.setString(1, generateSaleNo(getSaleNos()));
                ps.setString(2, invoiceID);
                ps.setString(3, idate);
                ps.setString(4, getItem.getBrand());
                ps.setString(5, getItem.getModel());
                ps.setString(6, getItem.getPartname());
                ps.setString(7, getItem.getPartNumber());
                ps.setInt(8, getItem.getQuantity());
                ps.setDouble(9, getItem.getUnitPrice());
                ps.setDouble(10, getItem.getTotal());

                ps.executeUpdate();
                ps.close();
            }

            updateItems();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckOutForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CheckOutForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public int getQuantityByPartNumber(String partNumber) {

        int a_quantity = 0;
        String getQuantityQuery = "SELECT a_quantity FROM sparepart_stock WHERE partnumber = '" + partNumber + "'";

        try {

            PreparedStatement ps = DBConnection.getDBconnection().prepareStatement(getQuantityQuery);

            ResultSet resultSet = ps.executeQuery();

            while (resultSet.next()) {
                a_quantity = resultSet.getInt(1);
            }

            ps.close();
            resultSet.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomersPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex,
                    "Alert!", JOptionPane.PLAIN_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(CustomersPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex,
                    "Alert", JOptionPane.PLAIN_MESSAGE);

        }

        return a_quantity;
    }

    public void updateItems() {

        ArrayList<SparepartStock> itemList = new ArrayList<>();
        itemList = getItemsFromInvoice();

        int new_quantity = 0;

        for (SparepartStock getItem : itemList) {

            new_quantity = getQuantityByPartNumber(getItem.getPartNumber()) - getItem.getQuantity();

            String updateQuantityQuery = "UPDATE sparepart_stock SET a_quantity = '" + new_quantity + "' "
                    + "WHERE partnumber = '" + getItem.getPartNumber() + "'";

            try {

                PreparedStatement ps = DBConnection.getDBconnection().prepareStatement(updateQuantityQuery);

                ps.execute();
                ps.close();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CustomersPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex,
                        "Alert!", JOptionPane.PLAIN_MESSAGE);

            } catch (SQLException ex) {
                Logger.getLogger(CustomersPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex,
                        "Alert", JOptionPane.PLAIN_MESSAGE);

            }

        }

    }

    private void print_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_btnActionPerformed

        int state = JOptionPane.showConfirmDialog(null, "Do you want to send invoice?", "Alert", JOptionPane.YES_NO_OPTION);

        if (state == 0) {

            String bankName = bank_combo.getSelectedItem().toString();
            String chequeNo = JchequeNoField.getText();

            if (paymentMethod.getText().equals("Cheque")) {

                if (bankName.equals("Select Bank") || chequeNo.equals("")) {

                    errorMessage.setForeground(Color.red);
                    errorMessage.setText("*Please enter bank details");
                    JOptionPane.showMessageDialog(null, "Enter bank details!",
                            "Alert", JOptionPane.PLAIN_MESSAGE);
                } else {

                    addSaleInvoice();
                    addSale();

                    // Generate PDF and Send Email function here!!
                    GenerateSparepartSaleInvoicePDF.createPDF(invoiceNo.getText().toString(),
                            getItemsFromInvoice(), getSparepartBuyerByNIC(nic.getText().toString()), date.getText().toString(),
                            paymentMethod.getText().toString(), bank_combo.getSelectedItem().toString(), JchequeNoField.getText().toString(),
                            totalPrice.getText().toString());

                    SendSparepartSaleInvoiceEmail.create_sendEmail(invoiceNo.getText().toString(), "pasan.godamune@gmail.com");

                    JOptionPane.showMessageDialog(null, "DONE!",
                            "Alert", JOptionPane.PLAIN_MESSAGE);
                    this.dispose();

                }

            } else {

                addSale();
                addSaleInvoice();

                // Generate PDF and Send Email function here!!
                GenerateSparepartSaleInvoicePDF.createPDF(invoiceNo.getText().toString(),
                        getItemsFromInvoice(), getSparepartBuyerByNIC(nic.getText().toString()), date.getText().toString(),
                        paymentMethod.getText().toString(), bank_combo.getSelectedItem().toString(), JchequeNoField.getText().toString(),
                        totalPrice.getText().toString());

                SendSparepartSaleInvoiceEmail.create_sendEmail(invoiceNo.getText().toString(), "pasan.godamune@gmail.com");

                JOptionPane.showMessageDialog(null, "DONE!",
                        "Alert", JOptionPane.PLAIN_MESSAGE);
                this.dispose();

            }

        }


    }//GEN-LAST:event_print_btnActionPerformed


    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        // TODO add your handling code here:

        int state = JOptionPane.showConfirmDialog(null, "Do you want to cancel?", "Alert", JOptionPane.YES_NO_OPTION);

        if (state == 0) {
            this.setVisible(false);
        }

    }//GEN-LAST:event_cancel_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOutForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JchequeNoField;
    private javax.swing.JLabel address;
    private javax.swing.JComboBox<String> bank_combo;
    private javax.swing.JButton cancel_btn;
    public javax.swing.JLabel customerName;
    private javax.swing.JLabel date;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel invoiceNo;
    public javax.swing.JTable invoice_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nic;
    private javax.swing.JLabel paymentMethod;
    private javax.swing.JLabel phone;
    private javax.swing.JButton print_btn;
    private javax.swing.JLabel totalPrice;
    // End of variables declaration//GEN-END:variables
}
